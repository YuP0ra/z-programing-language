
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEASSIGN DIVIDE ID LPAREN MINUS MOD MULTIPLY NEWLINE NUM PLUS RPAREN R_DEF\n    sourcecode  : NEWLINE\n                | assignment\n    \n    assignment  : ID ASSIGN expression\n                | ID\n    \n    expression  : LPAREN        expression  RPAREN\n                | expression    MOD         expression\n                | expression    PLUS        expression\n                | expression    MINUS       expression\n                | expression    DIVIDE      expression\n                | expression    MULTIPLY    expression\n                | NUM\n                | ID\n\n\n    '
    
_lr_action_items = {'NEWLINE':([0,],[2,]),'ID':([0,5,8,10,11,12,13,14,],[4,6,6,6,6,6,6,6,]),'$end':([1,2,3,4,6,7,9,16,17,18,19,20,21,],[0,-1,-2,-4,-12,-3,-11,-6,-7,-8,-9,-10,-5,]),'ASSIGN':([4,],[5,]),'LPAREN':([5,8,10,11,12,13,14,],[8,8,8,8,8,8,8,]),'NUM':([5,8,10,11,12,13,14,],[9,9,9,9,9,9,9,]),'MOD':([6,7,9,15,16,17,18,19,20,21,],[-12,10,-11,10,10,-7,-8,-9,-10,-5,]),'PLUS':([6,7,9,15,16,17,18,19,20,21,],[-12,11,-11,11,11,-7,-8,-9,-10,-5,]),'MINUS':([6,7,9,15,16,17,18,19,20,21,],[-12,12,-11,12,12,-7,-8,-9,-10,-5,]),'DIVIDE':([6,7,9,15,16,17,18,19,20,21,],[-12,13,-11,13,13,13,13,-9,-10,-5,]),'MULTIPLY':([6,7,9,15,16,17,18,19,20,21,],[-12,14,-11,14,14,14,14,-9,-10,-5,]),'RPAREN':([6,9,15,16,17,18,19,20,21,],[-12,-11,21,-6,-7,-8,-9,-10,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sourcecode':([0,],[1,]),'assignment':([0,],[3,]),'expression':([5,8,10,11,12,13,14,],[7,15,16,17,18,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sourcecode","S'",1,None,None,None),
  ('sourcecode -> NEWLINE','sourcecode',1,'p_0','calc_comppiler.py',62),
  ('sourcecode -> assignment','sourcecode',1,'p_0','calc_comppiler.py',63),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_1','calc_comppiler.py',68),
  ('assignment -> ID','assignment',1,'p_1','calc_comppiler.py',69),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_2','calc_comppiler.py',80),
  ('expression -> expression MOD expression','expression',3,'p_2','calc_comppiler.py',81),
  ('expression -> expression PLUS expression','expression',3,'p_2','calc_comppiler.py',82),
  ('expression -> expression MINUS expression','expression',3,'p_2','calc_comppiler.py',83),
  ('expression -> expression DIVIDE expression','expression',3,'p_2','calc_comppiler.py',84),
  ('expression -> expression MULTIPLY expression','expression',3,'p_2','calc_comppiler.py',85),
  ('expression -> NUM','expression',1,'p_2','calc_comppiler.py',86),
  ('expression -> ID','expression',1,'p_2','calc_comppiler.py',87),
]
